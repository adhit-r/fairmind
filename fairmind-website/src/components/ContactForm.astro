---
const { title = 'Get in Touch', description = 'Have questions? Send us a message and we\'ll get back to you soon.' } = Astro.props;
---

<div class="max-w-3xl mx-auto">
  <div class="text-center mb-10">
    <h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-brand-purple to-brand-pink bg-clip-text text-transparent">
      {title}
    </h2>
    <p class="text-xl text-gray-300 max-w-2xl mx-auto">
      {description}
    </p>
  </div>
  
  <form 
    name="contact" 
    method="POST" 
    data-netlify="true"
    netlify-honeypot="bot-field"
    class="space-y-6"
  >
    <input type="hidden" name="form-name" value="contact" />
    <p class="hidden">
      <label>Don't fill this out if you're human: <input name="bot-field" /></label>
    </p>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-300 mb-1">Full Name</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          required 
          class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-brand-purple focus:border-transparent text-white placeholder-gray-400"
          placeholder="Your name"
        >
      </div>
      
      <div>
        <label for="email" class="block text-sm font-medium text-gray-300 mb-1">Email Address</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          required 
          class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-brand-purple focus:border-transparent text-white placeholder-gray-400"
          placeholder="your.email@example.com"
        >
      </div>
    </div>
    
    <div>
      <label for="subject" class="block text-sm font-medium text-gray-300 mb-1">Subject</label>
      <input 
        type="text" 
        id="subject" 
        name="subject" 
        required 
        class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-brand-purple focus:border-transparent text-white placeholder-gray-400"
        placeholder="How can we help?"
      >
    </div>
    
    <div>
      <label for="message" class="block text-sm font-medium text-gray-300 mb-1">Message</label>
      <textarea 
        id="message" 
        name="message" 
        rows="5" 
        required
        class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-brand-purple focus:border-transparent text-white placeholder-gray-400"
        placeholder="Tell us more about your project or question..."
      ></textarea>
    </div>
    
    <div class="flex items-center">
      <button 
        type="submit" 
        class="px-8 py-3 bg-gradient-to-r from-brand-purple to-brand-pink text-white font-semibold rounded-lg hover:opacity-90 transition-opacity duration-300 transform hover:scale-105"
      >
        Send Message
      </button>
      
      <p class="ml-4 text-sm text-gray-400">
        We'll get back to you within 24 hours.
      </p>
    </div>
  </form>
  
  <div class="mt-12 pt-8 border-t border-gray-800">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      <div class="flex items-start">
        <div class="flex-shrink-0 bg-brand-purple/10 p-3 rounded-lg">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-brand-purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
        <div class="ml-4">
          <h3 class="text-lg font-medium text-white">Email Us</h3>
          <a href="mailto:support@fairmind.xyz" class="text-gray-400 hover:text-brand-purple transition-colors">support@fairmind.xyz</a>
        </div>
      </div>
      
      <div class="flex items-start">
        <div class="flex-shrink-0 bg-brand-purple/10 p-3 rounded-lg">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-brand-purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z" />
          </svg>
        </div>
        <div class="ml-4">
          <h3 class="text-lg font-medium text-white">Community</h3>
          <a href="https://github.com/your-org/fairmind" target="_blank" rel="noopener noreferrer" class="text-gray-400 hover:text-brand-purple transition-colors">GitHub Discussions</a>
        </div>
      </div>
      
      <div class="flex items-start">
        <div class="flex-shrink-0 bg-brand-purple/10 p-3 rounded-lg">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-brand-purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="ml-4">
          <h3 class="text-lg font-medium text-white">Response Time</h3>
          <p class="text-gray-400">Typically within 24 hours</p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Success/error message styles */
  .form-success,
  .form-error {
    @apply p-4 mb-6 rounded-lg text-sm;
  }
  
  .form-success {
    @apply bg-green-900/50 border border-green-800 text-green-200;
  }
  
  .form-error {
    @apply bg-red-900/50 border border-red-800 text-red-200;
  }
  
  /* Form input focus styles */
  input:focus, textarea:focus {
    box-shadow: 0 0 0 3px rgba(168, 85, 247, 0.25);
  }
  
  /* Loading state for submit button */
  button[disabled] {
    @apply opacity-70 cursor-not-allowed;
  }
  
  /* Animation for form submission */
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }
  
  .submitting {
    animation: pulse 1.5s ease-in-out infinite;
  }
</style>

<script>
  // Handle form submission with JavaScript for better UX
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('form[name="contact"]');
    if (!form) return;
    
    // Add event listener for form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const submitButton = form.querySelector('button[type="submit"]');
      const originalButtonText = submitButton.innerHTML;
      
      try {
        // Show loading state
        submitButton.disabled = true;
        submitButton.classList.add('submitting');
        submitButton.innerHTML = 'Sending...';
        
        // Submit the form data
        const response = await fetch('/', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: new URLSearchParams(formData).toString(),
        });
        
        // Show success message
        const successMessage = document.createElement('div');
        successMessage.className = 'form-success';
        successMessage.innerHTML = 'Thank you for your message! We\'ll get back to you soon.';
        form.prepend(successMessage);
        
        // Reset form
        form.reset();
        
        // Scroll to success message
        successMessage.scrollIntoView({ behavior: 'smooth' });
        
      } catch (error) {
        // Show error message
        const errorMessage = document.createElement('div');
        errorMessage.className = 'form-error';
        errorMessage.innerHTML = 'There was an error sending your message. Please try again or email us directly at support@fairmind.xyz';
        form.prepend(errorMessage);
        
        // Scroll to error message
        errorMessage.scrollIntoView({ behavior: 'smooth' });
        
      } finally {
        // Reset button state
        submitButton.disabled = false;
        submitButton.classList.remove('submitting');
        submitButton.innerHTML = originalButtonText;
      }
    });
  });
</script>
